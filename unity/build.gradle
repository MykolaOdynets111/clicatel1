version '1.0-SNAPSHOT'

buildscript {
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.8.1"
    }
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}

apply plugin: 'io.qameta.allure'

def allureVersion = '2.17.3'
allure{
    configuration = 'compile'
    aspectjweaver = true
    version = allureVersion
    resultsDir = file("${rootProject.buildDir}${File.separator}allure-results")
    reportDir = file("${rootProject.buildDir}${File.separator}allure-report")
}

dependencies {
    api project (':touch')
}

tasks.withType(Copy) { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }

def baseXmlPath = "/src/test/resources/"
def tenantName
def suite="all"
def env = 'testing'

tasks.withType(Test) {
    systemProperties = System.getProperties()
    tenantName = System.getProperty("tenant", "all")
}

// ========= !! TASKS FOR SUITES !! ============== //


task runTouchTests(type:Test) {
    useTestNG() {
        ignoreFailures = true
        suites baseXmlPath+tenantName+"/uitests.xml"
        suites baseXmlPath+tenantName+"/aggregated_onethread_tests.xml"
        suites baseXmlPath+tenantName+"/aggregated_compatible_tests.xml"
    }
}


// ========= !! MAIN TASKS !! ============== //

task runTests(type: Test) {

    if (System.getProperty("suite") != null) {
        suite = System.properties.getProperty("suite")
    }

    if(suite == "websockets") {
        runTests.dependsOn(runWebsocketsReqression)
    }


    if(suite == "abc") {
        runTests.dependsOn(runAbcTests)
    }

    reportToTesFLO.dependsOn('allureReport')

    runTests.finalizedBy(reportToTesFLO)

    defaultTasks 'clean', 'runTests'
}