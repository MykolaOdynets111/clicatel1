/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.touch.models.touch.roster;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

public class ListRosterResponse {
  @SerializedName("rosters")
  private List<RosterResponse> rosters = new ArrayList<RosterResponse>();

  public ListRosterResponse rosters(List<RosterResponse> rosters) {
    this.rosters = rosters;
    return this;
  }

  public ListRosterResponse addRostersItem(RosterResponse rostersItem) {
    this.rosters.add(rostersItem);
    return this;
  }

   /**
   * Get rosters
   * @return rosters
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<RosterResponse> getRosters() {
    return rosters;
  }

  public void setRosters(List<RosterResponse> rosters) {
    this.rosters = rosters;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListRosterResponse listRosterResponse = (ListRosterResponse) o;
    return Objects.equals(this.rosters, listRosterResponse.rosters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rosters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListRosterResponse {\n");
    
    sb.append("    rosters: ").append(toIndentedString(rosters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

