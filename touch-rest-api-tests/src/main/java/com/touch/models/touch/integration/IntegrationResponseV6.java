/**
 * 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.touch.models.touch.integration;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * IntegrationResponseV6
 */
public class IntegrationResponseV6   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("artifactName")
  private String artifactName = null;

  @SerializedName("integrationName")
  private String integrationName = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    @SerializedName("TALEND")
    TALEND("TALEND"),
    
    @SerializedName("SOAP")
    SOAP("SOAP"),
    
    @SerializedName("REST")
    REST("REST");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("version")
  private Integer version = null;

  @SerializedName("artifactUrl")
  private String artifactUrl = null;

  @SerializedName("actions")
  private List<String> actions = new ArrayList<String>();

  public IntegrationResponseV6 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public IntegrationResponseV6 artifactName(String artifactName) {
    this.artifactName = artifactName;
    return this;
  }

   /**
   * Get artifactName
   * @return artifactName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getArtifactName() {
    return artifactName;
  }

  public void setArtifactName(String artifactName) {
    this.artifactName = artifactName;
  }

  public IntegrationResponseV6 integrationName(String integrationName) {
    this.integrationName = integrationName;
    return this;
  }

   /**
   * Get integrationName
   * @return integrationName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getIntegrationName() {
    return integrationName;
  }

  public void setIntegrationName(String integrationName) {
    this.integrationName = integrationName;
  }

  public IntegrationResponseV6 type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public IntegrationResponseV6 version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

  public IntegrationResponseV6 artifactUrl(String artifactUrl) {
    this.artifactUrl = artifactUrl;
    return this;
  }

   /**
   * Get artifactUrl
   * @return artifactUrl
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getArtifactUrl() {
    return artifactUrl;
  }

  public void setArtifactUrl(String artifactUrl) {
    this.artifactUrl = artifactUrl;
  }

  public IntegrationResponseV6 actions(List<String> actions) {
    this.actions = actions;
    return this;
  }

  public IntegrationResponseV6 addActionsItem(String actionsItem) {
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getActions() {
    return actions;
  }

  public void setActions(List<String> actions) {
    this.actions = actions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationResponseV6 integrationResponseV6 = (IntegrationResponseV6) o;
    return Objects.equals(this.id, integrationResponseV6.id) &&
        Objects.equals(this.artifactName, integrationResponseV6.artifactName) &&
        Objects.equals(this.integrationName, integrationResponseV6.integrationName) &&
        Objects.equals(this.type, integrationResponseV6.type) &&
        Objects.equals(this.version, integrationResponseV6.version) &&
        Objects.equals(this.artifactUrl, integrationResponseV6.artifactUrl) &&
        Objects.equals(this.actions, integrationResponseV6.actions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, artifactName, integrationName, type, version, artifactUrl, actions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationResponseV6 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    artifactName: ").append(toIndentedString(artifactName)).append("\n");
    sb.append("    integrationName: ").append(toIndentedString(integrationName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    artifactUrl: ").append(toIndentedString(artifactUrl)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

